'use strict'

// NOTE: Mostly copy paste from node
exports.writeHead = function writeHead (statusCode, reason, obj) {
  var headers

  if (typeof reason === 'string') {
    // writeHead(statusCode, reasonPhrase[, headers])
    this.statusMessage = reason
  } else {
    // writeHead(statusCode[, headers])
    this.statusMessage =
      this.statusMessage || 'unknown'
    obj = reason
  }
  this.statusCode = statusCode

  if (this._headers) {
    // Slow-case: when progressive API and header fields are passed.
    if (obj) {
      var keys = Object.keys(obj)
      for (var i = 0; i < keys.length; i++) {
        var k = keys[i]
        if (k) this.setHeader(k, obj[k])
      }
    }
    // only progressive api is used
    headers = this._renderHeaders()
  } else {
    // only writeHead() called
    headers = obj
  }

  if (statusCode === 204 || statusCode === 304 ||
      (statusCode >= 100 && statusCode <= 199)) {
    // RFC 2616, 10.2.5:
    // The 204 response MUST NOT include a message-body, and thus is always
    // t